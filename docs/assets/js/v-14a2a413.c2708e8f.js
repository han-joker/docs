"use strict";(self.webpackChunkhan_joker_docs=self.webpackChunkhan_joker_docs||[]).push([[191],{7636:(e,i,a)=>{a.r(i),a.d(i,{data:()=>l});const l={key:"v-14a2a413",path:"/gorm/",title:"介绍",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Homepage",slug:"homepage",children:[]}],filePathRelative:"gorm/README.md",git:{updatedTime:1628857121e3}}},7173:(e,i,a)=>{a.r(i),a.d(i,{default:()=>n});var l=a(6252);const t=(0,l.uE)('<h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h1><p>The fantastic ORM library for Golang.</p><p>特性</p><ul><li><p>全功能 ORM</p></li><li><p>关联 (拥有一个，拥有多个，属于，多对多，多态，单表继承)</p></li><li><p>Create，Save，Update，Delete，Find 中钩子方法</p></li><li><p>支持 Preload、Joins 的预加载</p></li><li><p>事务，嵌套事务，Save Point，Rollback To to Saved Point</p></li><li><p>Context、预编译模式、DryRun 模式</p></li><li><p>批量插入，FindInBatches，Find/Create with Map，使用 SQL 表达式、Context Valuer 进行 CRUD</p></li><li><p>SQL 构建器，Upsert，锁，Optimizer/Index/Comment Hint，命名参数，子查询</p></li><li><p>复合主键，索引，约束</p></li><li><p>自动迁移</p></li><li><p>自定义 Logger</p></li><li><p>灵活的可扩展插件 API：Database Resolver（多数据库，读写分离）、Prometheus…</p></li><li><p>每个特性都经过了测试的重重考验</p></li><li><p>开发者友好</p></li></ul><h2 id="homepage" tabindex="-1"><a class="header-anchor" href="#homepage" aria-hidden="true">#</a> Homepage</h2>',5),p={href:"https://gorm.io/",target:"_blank",rel:"noopener noreferrer"},r=(0,l.Uk)("https://gorm.io/"),n={render:function(e,i){const a=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[t,(0,l.Wm)("p",null,[(0,l.Wm)("a",p,[r,(0,l.Wm)(a)])])],64)}}}}]);